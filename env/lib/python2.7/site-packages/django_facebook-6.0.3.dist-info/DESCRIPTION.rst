Fixes issues with the official but unsupported Facebook python-sdk. Enables mobile facebook authentication.
Canvas page authentication for facebook applications. FQL access via the server side api.

Home-page: http://github.com/tschellenbach/Django-facebook
Author: Thierry Schellenbach
Author-email: thierryschellenbach@gmail.com
License: Copyright (c) Thierry Schellenbach

 (http://www.mellowmorning.com)
All rights reserved.

Redistribution and use of this software in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
- Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
- Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
- Neither the name of Thierry Schellenbach. nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission of Thierry Schellenbach.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Description: ##############################################################################################
        Django Facebook by Thierry Schellenbach (`mellowmorning.com <http://www.mellowmorning.com/>`_)
        ##############################################################################################
        
        .. image:: https://secure.travis-ci.org/tschellenbach/Django-facebook.png?branch=master
                :target: https://travis-ci.org/tschellenbach/Django-facebook
        
        .. image:: https://pypip.in/d/django-facebook/badge.png
                :target: https://pypi.python.org/pypi/django-facebook
        
        
        Status
        -------
        Django and Facebook are both rapidly changing at the moment. Meanwhile, I'm caught up in a startup and don't have much spare time.
        The library needs a good round of testing against the latest python, django and facebook graph API.
        Contributions are strongly appreciated. Seriously, give github a try, fork and get started :)
        
        News
        ----
        * django-facebook is now python 3 compatible!  With this change, django-facebook will be dropping support for django 1.4 and the mininum required django version will be 1.5.
        
        
        Demo & About
        ------------
        
        Django Facebook enables your users to easily register using the Facebook API.
        It converts the Facebook user data and creates regular User and Profile objects.
        This makes it easy to integrate with your existing Django application.
        
        I've built it for my startup Fashiolista.com and it's currently used in production with thousands of signups per day.
        For a demo of the signup flow have a look at Fashiolista's landing page (`fashiolista.com <http://www.fashiolista.com/intro_wide_minimal/>`_)
        
        After registration Django Facebook gives you access to user's graph. Allowing for applications such as:
        
        * Open graph/ Timeline functionality
        * Seamless personalization
        * Inviting friends
        * Finding friends
        * Posting to a users profile
        
        Updates and tutorials can be found on my blog `mellowmorning <http://www.mellowmorning.com/>`_
        
        
        Features
        --------
        
        * Access the Facebook API, from:
           * Your website (Using javascript OAuth)
           * Facebook canvas pages (For building facebook applications)
           * Mobile (Or any other flow giving you a valid access token)
        * Django User Registration (Convert Facebook user data into a user model)
        * Store likes, friends and user data locally.
        * Facebook FQL access
        * OAuth 2.0 compliant
        * Automated reauthentication (For expired tokens)
        * Includes Open Facebook (stable and tested Python client to the graph API)
        
        
        Documentation
        -------------
        
        **Basics**
        
        * `Installation <http://django-facebook.readthedocs.org/en/latest/installation.html>`_
        * `Customizing <http://django-facebook.readthedocs.org/en/latest/customizing.html>`_
        * `Settings <http://django-facebook.readthedocs.org/en/latest/settings.html>`_
        * `Registration backends & Redirects <http://django-facebook.readthedocs.org/en/latest/registration_backend.html>`_
        
        **Open Facebook API**
        
        * `Getting an OpenFacebook object <http://django-facebook.readthedocs.org/en/latest/graph.html>`_
        * `Making calls <http://django-facebook.readthedocs.org/en/latest/open_facebook/api.html>`_
        
        **Advanced**
        
        * `Mobile <http://django-facebook.readthedocs.org/en/latest/mobile.html>`_
        * `Celery <http://django-facebook.readthedocs.org/en/latest/celery.html>`_
        * `Signals <http://django-facebook.readthedocs.org/en/latest/signals.html>`_
        * `Canvas <http://django-facebook.readthedocs.org/en/latest/canvas.html>`_
        
        
        Contributing and Running tests
        ------------------------------
        Tests are run from within the example project. You
        can run them yourself as follows:
        
        install from git
        
        facebook_example/manage.py test django_facebook
        
        
        **Vagrant**
        
        A vagrant development setup is included in the GIT repo.
        Assuming you have vagrant installed, simply type the following in your shell:
        
        ::
        
            # First get a fresh Django-Facebook checkout
            git clone git@github.com:tschellenbach/Django-facebook.git django-facebook
        
            # Go to the directory:
            cd django-facebook
        
            # Time to start Vagrant (grab a cup of coffee after this command, it'll take a while) :)
            vagrant up; vagrant provision
        
            # Finally done?
            vagrant ssh
            python manage.py runserver 0:8000
        
        To have a working Django Facebook example up and running at 192.168.50.42:8000/facebook/example/.
        For the facebook login to work simply map that ip to vagrant.mellowmorning.com
        (Since Facebook checks the domain)
        
        You can run the test suite by typing:
        
        ::
        
          python manage.py test django_facebook
        
        
        
        Django Jobs
        -----------
        Do you also see the beauty in clean code? Are you experienced with high scalability web apps?
        Currently we're looking for additional talent over at our Amsterdam office.
        Feel free to drop me a line at my personal email for more information: thierryschellenbach[at]gmail.com
        
        
        
        
        
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Topic :: Scientific/Engineering :: Mathematics
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Framework :: Django
Classifier: Environment :: Web Environment
